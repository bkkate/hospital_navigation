{"ast":null,"code":"var _jsxFileName = \"/Users/kate/Desktop/Projects/hospital_navigation/react-frontend/src/components/Dropdown.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport DropdownButton from \"./DropdownButton\";\nimport DropdownContent from \"./DropdownContent\";\nimport DropdownItem from \"./DropdownItem\";\nimport \"../style/Dropdown.css\";\nimport { useState, useEffect, useRef } from \"react\";\n\n// content: list rendering of DropdownItem\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dropdown = ({\n  onContentChange\n}) => {\n  _s();\n  const [open, setOpen] = useState(false);\n  const [dropdownTop, setDropdownTop] = useState(0);\n  const [dropdownContent, setDropdownContent] = useState(\"Update H&P\");\n  const dropdownRef = useRef();\n  const buttonRef = useRef();\n  const contentRef = useRef();\n\n  // toggle function\n  const toggleDropdown = () => {\n    // styling so that it overlays on top of dropdown bar when it's at bottom of the page\n    if (!open) {\n      const spaceRemaining = window.innerHeight - buttonRef.current.getBoundingClientRect().bottom;\n      const contentHeight = contentRef.current.clientHeight;\n      const topPosition = spaceRemaining > contentHeight ? null : spaceRemaining - contentHeight;\n      setDropdownTop(topPosition);\n    }\n    setOpen(!open);\n  };\n\n  // updating content with selected item from dropdown\n  const updateDropdownContent = itemText => {\n    // console.log(itemText);\n    setDropdownContent(itemText);\n    setOpen(false);\n\n    // send the most \"updated\" content to parent component, AppointmentBar\n    onContentChange(itemText);\n  };\n  useEffect(() => {\n    // if user doesn't select any non-default (\"Update H&P\") option - send that content to parent to update appt\n    onContentChange(dropdownContent);\n    const handler = event => {\n      // if the user clicks outside of the div with className=\"dropdown\", close up the content piece\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setOpen(false);\n      }\n    };\n    document.addEventListener(\"click\", handler);\n    // cleaning up event listener with each re-render\n    return () => {\n      document.removeEventListener(\"click\", handler);\n    };\n  }, [dropdownRef]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown\",\n    ref: dropdownRef,\n    children: [/*#__PURE__*/_jsxDEV(DropdownButton, {\n      toggle: toggleDropdown,\n      open: open,\n      ref: buttonRef,\n      children: dropdownContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropdownContent, {\n      open: open,\n      updateOnClick: updateDropdownContent,\n      ref: contentRef,\n      top: dropdownTop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Dropdown, \"r+pL9/UheuEnEWtSfs+1PuhAL1w=\");\n_c = Dropdown;\nexport default Dropdown;\nvar _c;\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"names":["React","DropdownButton","DropdownContent","DropdownItem","useState","useEffect","useRef","jsxDEV","_jsxDEV","Dropdown","onContentChange","_s","open","setOpen","dropdownTop","setDropdownTop","dropdownContent","setDropdownContent","dropdownRef","buttonRef","contentRef","toggleDropdown","spaceRemaining","window","innerHeight","current","getBoundingClientRect","bottom","contentHeight","clientHeight","topPosition","updateDropdownContent","itemText","handler","event","contains","target","document","addEventListener","removeEventListener","className","ref","children","toggle","fileName","_jsxFileName","lineNumber","columnNumber","updateOnClick","top","_c","$RefreshReg$"],"sources":["/Users/kate/Desktop/Projects/hospital_navigation/react-frontend/src/components/Dropdown.js"],"sourcesContent":["import React from \"react\";\nimport DropdownButton from \"./DropdownButton\";\nimport DropdownContent from \"./DropdownContent\";\nimport DropdownItem from \"./DropdownItem\";\nimport \"../style/Dropdown.css\";\nimport { useState, useEffect, useRef } from \"react\";\n\n// content: list rendering of DropdownItem\nconst Dropdown = ({ onContentChange }) => {\n  const [open, setOpen] = useState(false);\n  const [dropdownTop, setDropdownTop] = useState(0);\n  const [dropdownContent, setDropdownContent] = useState(\"Update H&P\");\n\n  const dropdownRef = useRef();\n  const buttonRef = useRef();\n  const contentRef = useRef();\n\n  // toggle function\n  const toggleDropdown = () => {\n    // styling so that it overlays on top of dropdown bar when it's at bottom of the page\n    if (!open) {\n      const spaceRemaining =\n        window.innerHeight - buttonRef.current.getBoundingClientRect().bottom;\n      const contentHeight = contentRef.current.clientHeight;\n      const topPosition =\n        spaceRemaining > contentHeight ? null : spaceRemaining - contentHeight;\n\n      setDropdownTop(topPosition);\n    }\n    setOpen(!open);\n  };\n\n  // updating content with selected item from dropdown\n  const updateDropdownContent = (itemText) => {\n    // console.log(itemText);\n    setDropdownContent(itemText);\n    setOpen(false);\n\n    // send the most \"updated\" content to parent component, AppointmentBar\n    onContentChange(itemText);\n  };\n\n  useEffect(() => {\n    // if user doesn't select any non-default (\"Update H&P\") option - send that content to parent to update appt\n    onContentChange(dropdownContent);\n\n    const handler = (event) => {\n      // if the user clicks outside of the div with className=\"dropdown\", close up the content piece\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setOpen(false);\n      }\n    };\n\n    document.addEventListener(\"click\", handler);\n    // cleaning up event listener with each re-render\n    return () => {\n      document.removeEventListener(\"click\", handler);\n    };\n  }, [dropdownRef]);\n\n  return (\n    <div className=\"dropdown\" ref={dropdownRef}>\n      <DropdownButton toggle={toggleDropdown} open={open} ref={buttonRef}>\n        {dropdownContent}\n      </DropdownButton>\n      <DropdownContent\n        open={open}\n        updateOnClick={updateDropdownContent}\n        ref={contentRef}\n        top={dropdownTop}\n      ></DropdownContent>\n    </div>\n  );\n};\n\nexport default Dropdown;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}