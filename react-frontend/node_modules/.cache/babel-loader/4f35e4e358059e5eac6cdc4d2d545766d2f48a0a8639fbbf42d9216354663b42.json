{"ast":null,"code":"var _jsxFileName = \"/Users/kate/Desktop/Projects/hospital_navigation/react-frontend/src/components/AppointmentBar.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Dropdown from \"./Dropdown.js\";\nimport Timepicker from \"./Timepicker.js\";\nimport \"../style/AppointmentBar.css\";\nimport { useContext, useState } from \"react\";\nimport AppointmentContext from \"../context/appointments.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppointmentBar = () => {\n  _s();\n  const {\n    appts,\n    addAppt\n  } = useContext(AppointmentContext);\n  const [locationToUpload, setLocationToUpload] = useState(\"\");\n  const [timeToUpload, setTimeToUpload] = useState(\"\");\n\n  // receive the selected content from Dropdown child component, then update state at this component\n  const receiveSelectContent = content => {\n    setLocationToUpload(content);\n  };\n\n  // receive the selected time from TimePicker child component, then update state at this component\n  // data types: all hour, min, period are strings\n  const receiveSelectTime = (hour, min, period) => {\n    // console.log(\n    //   \"data received from timePicker, on Appointment Bar: \",\n    //   hour,\n    //   min,\n    //   period\n    // );\n    if (period === \"PM\" && hour < 12) {\n      hour = parseInt(hour, 10) + 12;\n    }\n    if (min.length < 2) {\n      min = \"0\" + min;\n    }\n    // a string format of hh:mm:00\n    const timeString = `${hour.toString().padStart(2, \"0\")}:${min}:00`;\n    setTimeToUpload(timeString);\n  };\n  const handleAdd = event => {\n    event.preventDefault();\n\n    //use context's addApt function to pass in a new appt object with all the info\n    const newAppt = {\n      location: locationToUpload,\n      time: timeToUpload\n    };\n    addAppt(newAppt);\n    console.log(appts);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-bar\",\n    children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n      onContentChange: receiveSelectContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Timepicker, {\n      onTimeChange: receiveSelectTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"add-appt-btn\",\n      onClick: handleAdd,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(AppointmentBar, \"rU0ELd5JAR/vLtakZL3W6FDGI3A=\");\n_c = AppointmentBar;\nexport default AppointmentBar;\nvar _c;\n$RefreshReg$(_c, \"AppointmentBar\");","map":{"version":3,"names":["React","Dropdown","Timepicker","useContext","useState","AppointmentContext","jsxDEV","_jsxDEV","AppointmentBar","_s","appts","addAppt","locationToUpload","setLocationToUpload","timeToUpload","setTimeToUpload","receiveSelectContent","content","receiveSelectTime","hour","min","period","parseInt","length","timeString","toString","padStart","handleAdd","event","preventDefault","newAppt","location","time","console","log","className","children","onContentChange","fileName","_jsxFileName","lineNumber","columnNumber","onTimeChange","type","onClick","_c","$RefreshReg$"],"sources":["/Users/kate/Desktop/Projects/hospital_navigation/react-frontend/src/components/AppointmentBar.js"],"sourcesContent":["import React from \"react\";\nimport Dropdown from \"./Dropdown.js\";\nimport Timepicker from \"./Timepicker.js\";\nimport \"../style/AppointmentBar.css\";\nimport { useContext, useState } from \"react\";\nimport AppointmentContext from \"../context/appointments.js\";\n\nconst AppointmentBar = () => {\n  const { appts, addAppt } = useContext(AppointmentContext);\n  const [locationToUpload, setLocationToUpload] = useState(\"\");\n  const [timeToUpload, setTimeToUpload] = useState(\"\");\n\n  // receive the selected content from Dropdown child component, then update state at this component\n  const receiveSelectContent = (content) => {\n    setLocationToUpload(content);\n  };\n\n  // receive the selected time from TimePicker child component, then update state at this component\n  // data types: all hour, min, period are strings\n  const receiveSelectTime = (hour, min, period) => {\n    // console.log(\n    //   \"data received from timePicker, on Appointment Bar: \",\n    //   hour,\n    //   min,\n    //   period\n    // );\n    if (period === \"PM\" && hour < 12) {\n      hour = parseInt(hour, 10) + 12;\n    }\n\n    if (min.length < 2) {\n      min = \"0\" + min;\n    }\n    // a string format of hh:mm:00\n    const timeString = `${hour.toString().padStart(2, \"0\")}:${min}:00`;\n    setTimeToUpload(timeString);\n  };\n\n  const handleAdd = (event) => {\n    event.preventDefault();\n\n    //use context's addApt function to pass in a new appt object with all the info\n    const newAppt = {\n      location: locationToUpload,\n      time: timeToUpload,\n    };\n\n    addAppt(newAppt);\n\n    console.log(appts);\n  };\n\n  return (\n    <div className=\"add-bar\">\n      <Dropdown onContentChange={receiveSelectContent} />\n      <Timepicker onTimeChange={receiveSelectTime}></Timepicker>\n      <button type=\"submit\" className=\"add-appt-btn\" onClick={handleAdd}>\n        Add\n      </button>\n    </div>\n  );\n};\n\nexport default AppointmentBar;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,eAAe;AACpC,OAAOC,UAAU,MAAM,iBAAiB;AACxC,OAAO,6BAA6B;AACpC,SAASC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC5C,OAAOC,kBAAkB,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGR,UAAU,CAACE,kBAAkB,CAAC;EACzD,MAAM,CAACO,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACA,MAAMY,oBAAoB,GAAIC,OAAO,IAAK;IACxCJ,mBAAmB,CAACI,OAAO,CAAC;EAC9B,CAAC;;EAED;EACA;EACA,MAAMC,iBAAiB,GAAGA,CAACC,IAAI,EAAEC,GAAG,EAAEC,MAAM,KAAK;IAC/C;IACA;IACA;IACA;IACA;IACA;IACA,IAAIA,MAAM,KAAK,IAAI,IAAIF,IAAI,GAAG,EAAE,EAAE;MAChCA,IAAI,GAAGG,QAAQ,CAACH,IAAI,EAAE,EAAE,CAAC,GAAG,EAAE;IAChC;IAEA,IAAIC,GAAG,CAACG,MAAM,GAAG,CAAC,EAAE;MAClBH,GAAG,GAAG,GAAG,GAAGA,GAAG;IACjB;IACA;IACA,MAAMI,UAAU,GAAG,GAAGL,IAAI,CAACM,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIN,GAAG,KAAK;IAClEL,eAAe,CAACS,UAAU,CAAC;EAC7B,CAAC;EAED,MAAMG,SAAS,GAAIC,KAAK,IAAK;IAC3BA,KAAK,CAACC,cAAc,CAAC,CAAC;;IAEtB;IACA,MAAMC,OAAO,GAAG;MACdC,QAAQ,EAAEnB,gBAAgB;MAC1BoB,IAAI,EAAElB;IACR,CAAC;IAEDH,OAAO,CAACmB,OAAO,CAAC;IAEhBG,OAAO,CAACC,GAAG,CAACxB,KAAK,CAAC;EACpB,CAAC;EAED,oBACEH,OAAA;IAAK4B,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtB7B,OAAA,CAACN,QAAQ;MAACoC,eAAe,EAAErB;IAAqB;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnDlC,OAAA,CAACL,UAAU;MAACwC,YAAY,EAAExB;IAAkB;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,eAC1DlC,OAAA;MAAQoC,IAAI,EAAC,QAAQ;MAACR,SAAS,EAAC,cAAc;MAACS,OAAO,EAAEjB,SAAU;MAAAS,QAAA,EAAC;IAEnE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAChC,EAAA,CAtDID,cAAc;AAAAqC,EAAA,GAAdrC,cAAc;AAwDpB,eAAeA,cAAc;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}