{"ast":null,"code":"var _jsxFileName = \"/Users/kate/Desktop/Projects/hospital_navigation/react-frontend/src/components/DropdownButton.js\";\nimport React, { forwardRef } from \"react\";\nimport { FaChevronDown, FaChevronUp } from \"react-icons/fa\";\nimport \"../style/DropdownButton.css\";\n\n// Wrapping around forwardRef as this is a component, not an html element, to use it as a ref\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DropdownButton = /*#__PURE__*/forwardRef(_c = (props, ref) => {\n  // 'toggle' (which value is toggleDropdown) and 'open' are props handed down from parent Dropdown\n  const {\n    children,\n    open,\n    toggle\n  } = props;\n  const handleIconClick = event => {\n    event.stopPropagation();\n    toggle();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dropdown-btn ${open ? \"button-open\" : null}`,\n    onClick: toggle,\n    ref: ref,\n    children: [\" \", children, /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"toggle-icon\",\n      onClick: handleIconClick,\n      children: open ? /*#__PURE__*/_jsxDEV(FaChevronUp, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(FaChevronDown, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 35\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n});\n_c2 = DropdownButton;\nexport default DropdownButton;\nvar _c, _c2;\n$RefreshReg$(_c, \"DropdownButton$forwardRef\");\n$RefreshReg$(_c2, \"DropdownButton\");","map":{"version":3,"names":["React","forwardRef","FaChevronDown","FaChevronUp","jsxDEV","_jsxDEV","DropdownButton","_c","props","ref","children","open","toggle","handleIconClick","event","stopPropagation","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/kate/Desktop/Projects/hospital_navigation/react-frontend/src/components/DropdownButton.js"],"sourcesContent":["import React, { forwardRef } from \"react\";\nimport { FaChevronDown, FaChevronUp } from \"react-icons/fa\";\nimport \"../style/DropdownButton.css\";\n\n// Wrapping around forwardRef as this is a component, not an html element, to use it as a ref\nconst DropdownButton = forwardRef((props, ref) => {\n  // 'toggle' (which value is toggleDropdown) and 'open' are props handed down from parent Dropdown\n  const { children, open, toggle } = props;\n  const handleIconClick = (event) => {\n    event.stopPropagation();\n    toggle();\n  };\n\n  return (\n    <div\n      className={`dropdown-btn ${open ? \"button-open\" : null}`}\n      onClick={toggle}\n      ref={ref}\n    >\n      {\" \"}\n      {children}\n      <span className=\"toggle-icon\" onClick={handleIconClick}>\n        {open ? <FaChevronUp /> : <FaChevronDown />}\n      </span>\n    </div>\n  );\n});\n\nexport default DropdownButton;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,aAAa,EAAEC,WAAW,QAAQ,gBAAgB;AAC3D,OAAO,6BAA6B;;AAEpC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,cAAc,gBAAGL,UAAU,CAAAM,EAAA,GAACA,CAACC,KAAK,EAAEC,GAAG,KAAK;EAChD;EACA,MAAM;IAAEC,QAAQ;IAAEC,IAAI;IAAEC;EAAO,CAAC,GAAGJ,KAAK;EACxC,MAAMK,eAAe,GAAIC,KAAK,IAAK;IACjCA,KAAK,CAACC,eAAe,CAAC,CAAC;IACvBH,MAAM,CAAC,CAAC;EACV,CAAC;EAED,oBACEP,OAAA;IACEW,SAAS,EAAE,gBAAgBL,IAAI,GAAG,aAAa,GAAG,IAAI,EAAG;IACzDM,OAAO,EAAEL,MAAO;IAChBH,GAAG,EAAEA,GAAI;IAAAC,QAAA,GAER,GAAG,EACHA,QAAQ,eACTL,OAAA;MAAMW,SAAS,EAAC,aAAa;MAACC,OAAO,EAAEJ,eAAgB;MAAAH,QAAA,EACpDC,IAAI,gBAAGN,OAAA,CAACF,WAAW;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAAGhB,OAAA,CAACH,aAAa;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC,CAAC;AAACC,GAAA,GArBGhB,cAAc;AAuBpB,eAAeA,cAAc;AAAC,IAAAC,EAAA,EAAAe,GAAA;AAAAC,YAAA,CAAAhB,EAAA;AAAAgB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}